/*
function findLongestSubstring(str) {
    // add whatever parameters you deem necessary - good luck!
    if(str.length === 0) return 0;

    let start = 0;
    let end = 0;
    let max = 0;
    let obj = {};

    while (start <= end && start < str.length) {
        if(end < str.length && !obj[str[end]]) {
            obj[str[end]] = 1;
            end++;
        }else{
            max = Math.max(max, end - start);
            delete obj[str[start]];
            start++;
        }
    }

    return max;
}*/

//console.log(findLongestSubstring("rithmschool")); //7
//console.log(findLongestSubstring("thisisawesome")); //6
//console.log(findLongestSubstring("thecatinthehat")); //7
//console.log(findLongestSubstring("bbbbbb")); //1
console.log(findLongestSubstring("longestsubstring")); //8
//console.log(findLongestSubstring("thecatinthehat")); //7

///* Gabarito
function findLongestSubstring(str) {
  let longest = 0;
  let seen = {};
  let start = 0;
 
  for (let i = 0; i < str.length; i++) {
    let char = str[i];
    if (seen[char]) {
      start = Math.max(start, seen[char]);
    }
    // index - beginning of substring + 1 (to include current in count)
    longest = Math.max(longest, i - start + 1);
    // store the index of the next char so as to not double count
    seen[char] = i + 1;
  }
  return longest;
}
//*/