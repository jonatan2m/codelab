function minSubArrayLen(arr, target) {
    let start = 0;
    let end = 0;
    let sum = 0;
    let minLength = Infinity;

    if (arr.length === 0)
        return minLength;

    while (start <= end && start < arr.length) {

        if (sum < target && end < arr.length) {
            sum += arr[end];
            end++;
        } else if (sum >= target) {
            minLength = Math.min(minLength, end - start);
            sum = sum - arr[start];
            start++;
        } else {
            break;
        }
    }

    return minLength;
}

//console.log(minSubArrayLen([2, 3, 1, 2, 4, 3], 7));
//console.log(minSubArrayLen([2, 1, 6, 5, 4], 9));
console.log(minSubArrayLen([1, 4, 16, 22, 5, 7, 8, 9, 10], 39));

/* Gabarito
function minSubArrayLen(nums, sum) {
  let total = 0;
  let start = 0;
  let end = 0;
  let minLen = Infinity;
 
  while (start < nums.length) {
    // if current window doesn't add up to the given sum then 
		// move the window to right
    if(total < sum && end < nums.length){
      total += nums[end];
			end++;
    }
    // if current window adds up to at least the sum given then
		// we can shrink the window 
    else if(total >= sum){
      minLen = Math.min(minLen, end-start);
			total -= nums[start];
			start++;
    } 
    // current total less than required total but we reach the end, need this or else we'll be in an infinite loop 
    else {
      break;
    }
  }
 
  return minLen === Infinity ? 0 : minLen;
}*/
